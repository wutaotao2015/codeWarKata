
set nocompatible

set clipboard+=unnamed

set history=1000

" Enable filetype plugins
filetype plugin on
filetype indent on

set autoread

let mapleader=","
nmap <leader>w :w!<cr>

set scrolloff=2

set wildmenu

set ruler
set cmdheight=2

set hidden

set backspace=indent,eol,start
set whichwrap+=<,>,h,l

set ignorecase
set smartcase
set incsearch
set hlsearch

set magic

set showmatch
set mat=2

set noerrorbells
set novisualbell
set t_vb=
set tm=500

set foldcolumn=1

syntax enable

set encoding=utf8
set ffs=unix,dos,mac

set noswapfile
set nobackup
set nowb

set expandtab
set smarttab

set shiftwidth=2
set tabstop=2

set linebreak
set tw=500
set autoindent
set smartindent
set wrap

" Visual mode pressing * or # searches for the current selection
" Super useful! From an idea by Michael Naumann
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Always show the status line
set laststatus=2

" Format the status line
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c

set number
set showcmd
set showmode

set foldmethod=indent
set foldlevel=0

inoremap ( ()<Esc>i
inoremap [ []<Esc>i
inoremap { {}<Esc>i
inoremap " ""<Esc>i

imap ,, <Esc>la

imap <C-I> <Esc>

" Returns true if paste mode is enabled
function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    endif
    return ''
endfunction

function! CmdLine(str)
    call feedkeys(":" . a:str)
endfunction

function! VisualSelection(direction, extra_filter) range
    let l:saved_reg = @"
    execute "normal! vgvy"

    let l:pattern = escape(@", "\\/.*'$^~[]")
    let l:pattern = substitute(l:pattern, "\n$", "", "")

    if a:direction == 'gv'
        call CmdLine("Ack '" . l:pattern . "' " )
    elseif a:direction == 'replace'
        call CmdLine("%s" . '/'. l:pattern . '/')
    endif

    let @/ = l:pattern
    let @" = l:saved_reg
endfunction
